name: Build and Deploy API

on:
  push:
    branches: 
      - main
    paths: 
      - 'Api/**'
      - 'Models/**'
  workflow_dispatch:

env:
  CONFIGURATION: release
  DOTNET_VERSION: '8.x'

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Restore
        run: dotnet restore Api/Api.csproj

      - name: Build
        run: dotnet build Api/Api.csproj --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test Api.Tests/Api.Tests.csproj --verbosity normal --logger trx --results-directory TestResults

      - name: Publish Api
        run: dotnet publish --configuration ${{ env.CONFIGURATION }} --output PublishApi Api/Api.csproj

      - name: Upload Api
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: PublishApi
  
  build-migration-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Entity Framework tool
        run: dotnet tool install --global dotnet-ef

      - name: create migration script
        run: dotnet ef migrations script --project Api/Api.csproj --configuration ${{ env.CONFIGURATION }} --output migrationScript/migration.sql --idempotent --verbose

      - name: Upload Migration Script
        uses: actions/upload-artifact@v2
        with:
          name: script
          path: migrationScript

  release:
    needs: [build-api, build-migration-script]
    runs-on: ubuntu-latest
    environment: 
      name: prod
      url: ${{ steps.deploy-api.outputs.webapp-url }}
    steps:
      - name: Download Api Artifact
        uses: actions/download-artifact@v2
        with:
          name: api
          path: api-artifact

      - name: Download DB artifact
        uses: actions/download-artifact@v2
        with:
          name: script
          path: db-artifact

      - name: Variable Substitution API
        uses: microsoft/variable-substitution@v1
        with:
          files: api-artifact/appsettings.json
        env:
          DatabaseConnection.Password: ${{ secrets.APP_USER_PASSWORD }}
          ApplicationInsights.ConnectionString: ${{ vars.APP_INSIGHTS_CONN_STRING }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Database
        uses: azure/sql-action@v2
        with:
          connection-string: '${{ vars.DATABASE_CONN_STRING }}password=${{ secrets.APP_USER_PASSWORD }}'
          path: db-artifact/migration.sql

      - name: Deploy API
        id: deploy-api
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.API_NAME }}
          package: api-artifact